{"version":3,"sources":["LogInPopup/LogInPopup.jsx","BillCycleSelector/BillCycleSelector.jsx","IdeasOnlyPanel/IdeasOnlyPanel.jsx","ProPanel/ProPanel.jsx","CardSection/CardSection.jsx","CheckoutPopup/CheckoutPopup.jsx","SuccessPopup/SuccessPopup.jsx","CreateAccountPopup/CreateAccountPopup.jsx","Home/Home.jsx","Loading/Loading.jsx","ConfirmActionPopup/ConfirmActionPopup.jsx","MyAccount/MyAccount.jsx","PrivateRoute/PrivateRoute.jsx","ResetPasswordPopup/ResetPasswordPopup.jsx","ResetPasswordPage/ResetPasswordPage.jsx","App/App.jsx","index.jsx"],"names":["LogInPopup","isOpen","closeFunction","setLoginStatus","toResetPasswordFunction","useState","processing","setProcessing","email","setEmail","password","setPassword","errorMessage","setErrorMessage","spinTransition","loop","Infinity","ease","duration","buttonText","motion","span","style","display","width","height","border","borderTop","borderRadius","boxSizing","animate","rotate","transition","document","body","overflow","onClick","class","id","className","onSubmit","event","a","preventDefault","axios","post","res","data","auth","localStorage","setItem","token","window","location","reload","console","log","message","type","value","disabled","onChange","e","target","BillCycleSelector","isOn","handleToggle","yearlyClass","discountText","discountClass","checked","IdeasOnlyPanel","annualBilling","onClickFunction","billString","price","src","ProPanel","CardSection","options","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CheckoutPopup","plan","billCycle","toSuccessFunction","stripe","useStripe","elements","useElements","firstName","setFirstName","lastName","setLastName","checkoutText","handleSubmitSub","createPaymentMethod","card","getElement","CardElement","billing_details","name","result","error","paymentMethod","code","raw","client_secret","status","confirmCardSetup","then","cardSetup","SuccessPopup","href","CreateAccountPopup","toLogIn","confirmPassword","setConfirmPassword","accessCode","setAccessCode","stripePromise","loadStripe","Home","openLogIn","annualCycleSelected","setAnnualCycleSelected","checkoutOpen","setCheckoutOpen","successOpen","setSucessOpen","createAccountOpen","setCreateAccountOpen","setPlan","setBillCycle","setPrice","alt","Loading","margin","justifyContent","alignItems","ConfirmActionPopup","title","subtitle","confirmButtonInitialText","confirmFunction","confirmButtonText","cancelButtonText","MyAccount","validateToken","confirmPauseEmailsPopupOpen","setConfirmPauseEmailsPopupOpen","confirmDeleteAccountPopupOpen","setConfirmDeleteAccountPopupOpen","user","JSON","parse","getItem","first_name","last_name","errorMessageAccountDetails","setErrorMessageAccountDetails","passwordInput","setPasswordInput","confirmPasswordInput","setConfirmPasswordInput","errorMessagePasswordInput","setErrorMessagePasswordInput","errorMessagePauseEmailsPopup","setErrorMessagePauseEmailsPopup","errorMessageDeleteAccountPopup","setErrorMessageDeleteAccountPopup","errorMessageResumeEmails","setErrorMessageResumeEmails","accountDetailsButtonText","changePasswordButtonText","pauseEmailsButtonText","resumeEmailsButtonText","deleteAccountButtonText","resumeEmails","updateSuccessful","emails_paused","PrivateRoute","validatingToken","loginStatus","children","to","ResetPasswordPopup","toLoginFunction","success","ResetPasswordPage","useSearchParams","searchParams","urlToken","get","App","loginOpen","setLoginOpen","setValidatingToken","resetPasswordOpen","setResetPasswordOpen","stringify","useEffect","clear","setNavButtons","path","element","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3bb2db74.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\n\nexport const LogInPopup = ({isOpen, closeFunction, setLoginStatus, toResetPasswordFunction}) => {\n    let [processing, setProcessing] = useState(false);\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n\n    let buttonText = \"Log In\";\n    if(processing){\n        buttonText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup success_popup\">\n                <button onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Log In</h1>\n                    <h2>Enter your credentials below. Beta feature only</h2>\n                </div>\n                <form onSubmit={async (event) => {\n                    event.preventDefault();\n                    setProcessing(true);\n                    try {\n                        const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/login', {'email': email,'password': password});\n                        if(res.data.auth == true){\n                            localStorage.setItem('token', res.data.token);\n                            setEmail('');\n                            setPassword('');\n                            setErrorMessage('');\n                            closeFunction();\n                            setLoginStatus(true);\n                            window.location.reload(false);\n                        } else {\n                            console.log(res.data);\n                            setErrorMessage(res.data.message);\n                            setLoginStatus(false);\n                        }\n                    } catch (error) {\n                        setErrorMessage('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                        setLoginStatus(false);\n                        console.log(error);\n                    }\n                    setProcessing(false);\n                }}>\n                    <label>\n                        Email\n                        <input \n                            type=\"text\"\n                            value={email}\n                            disabled={processing}\n                            onChange={(e)=> {setEmail(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Password\n                        <input\n                            type=\"password\"\n                            value={password}\n                            disabled={processing}\n                            onChange={(e)=> {setPassword(e.target.value)}}\n                        />\n                    </label>\n                    <button className=\"popup_form_button\" disabled={processing}>\n                        {buttonText}\n                    </button>\n                    <a className=\"forgot_password_link\" onClick={()=>{toResetPasswordFunction();}}>Forgot your password? Click here to reset</a>\n                    <p className=\"error_message\">{errorMessage}</p>\n                </form>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React from 'react';\n\nexport const BillCycleSelector = ({isOn, handleToggle}) => {\n    let yearlyClass = \"\";\n    let discountText = \"Save 0%\";\n    let discountClass = \"discount_tag_red\";\n    if(isOn === true){\n        yearlyClass = \"white\";\n        discountText = \"Save 20%\";\n        discountClass = \"discount_tag\";\n    }\n\n    return(<>\n        <div className=\"bill_cycle_selector\">\n            <label className=\"switch_container\">\n                <span className=\"monthly\">Billed Monthly</span>\n                <input checked={isOn} onChange={handleToggle} id=\"cycle_switch\" type=\"checkbox\"></input>\n                <span className=\"slider\"></span>\n                <span className={\"yearly\", yearlyClass}>Billed Annually</span>\n            </label>\n            <span id=\"discount_tag_wrapper\">\n                <h2 className={discountClass}>{discountText}</h2>\n            </span>\n        </div>\n    </>);\n};","import React from 'react';\n\nexport const IdeasOnlyPanel = ({annualBilling, onClickFunction}) => {\n    let billString = \"Monthly\";\n    let price = \"$1.99\";\n    if(annualBilling){\n        billString = \"Annually\";\n        price = \"$1.59\";\n    }\n\n    return(<>\n        <div class=\"pricing_plan\" id=\"ideas_only\">\n            <h1>Ideas Only</h1>\n            <p>Perfect for thoes who already know their way around the kitchen and just need ideas!</p>\n            <div class=\"price_wrapper\">\n                <h1 class=\"price\">{price} <span class=\"light_mons\">/month</span></h1>\n                <h2>(Billed {billString})</h2>\n            </div>\n            <div class=\"features_in_plan\">\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Weekly meal plans</h2>\n                </div>\n                <div class=\" row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>30 Day Free Trial</h2>\n                </div>\n            </div>\n            <button onClick={onClickFunction} class=\"try_free_button\">Try Free (30 Days)</button>\n        </div>\n    </>);\n};","import React from 'react';\n\nexport const ProPanel = ({annualBilling, onClickFunction}) => {\n    let billString = \"Monthly\";\n    let price = \"$4.99\";\n    if(annualBilling){\n        billString = \"Annually\";\n        price = \"$3.99\";\n    }\n\n    return(<>\n        <div class=\"pricing_plan\" id=\"pro_plan\">\n            <div class=\"most_popular\">Most Popular</div>\n            <h1>Pro</h1>\n            <p>Perfect for those who dont want to think about what to cook, buy and how to make it!</p>\n            <div class=\"price_wrapper\">\n                <h1 class=\"price\">{price} <span class=\"light_mons\">/month</span></h1>\n                <h2>(Billed {billString})</h2>\n            </div>\n            <div class=\"features_in_plan\">\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Weekly meal plans</h2>\n                </div>\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Weekly grocery lists</h2>\n                </div>\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Recipies Included</h2>\n                </div>\n                <div class=\" row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>30 Day Free Trial</h2>\n                </div>\n            </div>\n            <button onClick={onClickFunction} class=\"try_free_button\">Try Free (30 Days)</button>\n        </div>\n    </>);\n};","import React from 'react';\nimport {CardElement} from '@stripe/react-stripe-js';\n\nexport const CardSection = () => {\n    const CARD_ELEMENT_OPTIONS = {\n        style: {\n            base: {\n            color: \"#32325d\",\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n                color: \"#aab7c4\",\n            },\n            },\n            invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\",\n            },\n        },\n    };\n    return (\n        <label>\n        Card details\n        <CardElement options={CARD_ELEMENT_OPTIONS} />\n        </label>\n    );\n};","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n\nimport { CardSection } from '../CardSection';\n\n\nexport const CheckoutPopup = ({isOpen, closeFunction, plan, billCycle, price, toSuccessFunction}) => {\n    const stripe = useStripe();\n    const elements = useElements();\n\n    let [processing, setProcessing] = useState(false);\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n    \n    let checkoutText = \"Confirm Payment\";\n    if(processing){\n        checkoutText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n// This function was used for one off payments. It's in here just in case\n    // const handleSubmit = async (event) => {\n    //     if (!stripe || !elements) {\n    //         // Stripe.js has not yet loaded.\n    //         // Make sure to disable form submission until Stripe.js has loaded.\n    //         return \"Please try again. Stripe has not loaded. :)\";\n    //     }\n\n    //     if(firstName == \"\"){\n    //         return \"First Name Empty\"\n    //     }\n    //     if(lastName == \"\"){\n    //         return \"Last Name Empty\"\n    //     }\n    //     if(email == \"\"){\n    //         return \"Email Empty\"\n    //     }\n\n        \n    //     const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/pay', {email: email, first_name: firstName, last_name: lastName});\n    //     const clientSecret = await res.data['client_secret'];\n    //     console.log(await clientSecret);\n    //     const result = await stripe.confirmCardPayment(clientSecret, {\n    //     payment_method: {\n    //         card: elements.getElement(CardElement),\n    //         billing_details: {\n    //             name: firstName+\" \"+lastName,\n    //             email: email,\n    //         },\n    //     }\n    //     });\n    //     if (result.error) {\n    //         // Show error to your customer (e.g., insufficient funds)\n    //         console.log(result.error.message);\n    //         return result.error.message;\n    //     } else {\n    //         // The payment has been processed!\n    //         if (result.paymentIntent.status === 'succeeded') {\n    //             // Show a success message to your customer\n    //             // There's a risk of the customer closing the window before callback\n    //             // execution. Set up a webhook or plugin to listen for the\n    //             // payment_intent.succeeded event that handles any business critical\n    //             // post-payment actions.\n    //             console.log(\"Payment Processed\");\n    //             return \"success\";\n    //         }\n    //     }\n    // };\n\n// This function is used for handling subsriptions\n// !!!!!!!!!When you're not doing the free trial this whole function and the backend function need to change!!!!!!!!!\n// Look at this for an example https://github.com/Vuka951/tutorial-code/blob/master/react-express-stripe/subscription/react-app/src/components/HomePage.js\n    const handleSubmitSub = async (event) => {\n        if (!stripe || !elements) {\n            // Stripe.js has not yet loaded.\n            // Make sure to disable form submission until Stripe.js has loaded.\n            return \"Please try again. Stripe has not loaded. :)\";\n        }\n\n        if(firstName == \"\"){\n            return \"First Name Empty\";\n        }\n        if(lastName == \"\"){\n            return \"Last Name Empty\";\n        }\n        if(email == \"\"){\n            return \"Email Empty\";\n        }\n        const result = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardElement),\n            billing_details: {\n                        name: firstName+\" \"+lastName,\n                        email: email,\n            },\n        });\n\n        if (result.error) {\n            console.log(result.error.message);\n            return result.error.message;\n        }else{\n            try {\n                const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/sub', {'payment_method': result.paymentMethod.id, 'email': email, 'firstName': firstName, 'lastName': lastName, 'plan': plan, 'billCycle': billCycle});\n                // eslint-disable-next-line camelcase\n                console.log(res);\n\n                if(res.data.code){\n                    console.log('Payment Failed');\n                    console.log(res.data.raw.message);\n                    return res.data.raw.message;\n                }\n\n                const {client_secret, status} = res.data;\n                console.log(status);\n\n                if (status === 'requires_action') {\n                    const cardSetup = await stripe.confirmCardSetup(client_secret).then(function(result) {\n                        console.log(result);\n                        if (result.error) {\n                            // Display error message in your UI.\n                            // The card was declined (i.e. insufficient funds, card has expired, etc)\n                            console.log('There was an issue');\n                            console.log(result.error);\n                            // console.log('Error Message Returned');\n                            return result.error.message;\n                        } else {\n                            // Show a success message to your customer\n                            console.log('Payment sucessful after confirmation');\n                            return \"success\";\n                        }\n                    });\n                    return cardSetup;\n                } else if(status === \"succeeded\") {\n                    // No additional information was needed\n                    // Show a success message to your customer\n                    console.log('Payment sucessful');\n                    return \"success\";\n                } else {\n                    //Unexpected status\n                    return \"Error processing payment. Please try again or use a different card!\";\n                }\n            } catch (err) {\n                console.log(err);\n                return \"Error processing payment. Please try again or use a different card!\";\n            }\n        }\n  };\n\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div disabled={processing} onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup\">\n                <button disabled={processing} onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Checkout</h1>\n                    <h2>Your subscription will start now.</h2>\n                </div>\n                <div className=\"checkout_features\">\n                    <p>➔ Total due now $0</p>\n                    <p>➔ Subscribing to <span class=\"bold\">{plan}</span></p>\n                    <p>➔ After 30 days you will be billed {price}/{billCycle}</p>\n                </div>\n                <form\n                    onSubmit={async (event) => {\n                            event.preventDefault();\n                            setProcessing(true);\n                            const result = await handleSubmitSub();\n                            setProcessing(false);\n                            if(result === \"success\"){\n                                // console.log(\"if ran\");\n                                toSuccessFunction();\n                                setFirstName('');\n                                setLastName('');\n                                setEmail('');\n                                setErrorMessage('');\n                            }else{\n                                // console.log(result);\n                                // console.log('else ran. result value- '+result);\n                                // alert(result);\n                                setErrorMessage(result);\n                            }\n                        }}\n                >\n                    <label>\n                        First Name\n                        <input \n                            type=\"text\"\n                            value={firstName}\n                            disabled={processing}\n                            onChange={(e)=> {setFirstName(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Last Name\n                        <input \n                            type=\"text\"\n                            value={lastName}\n                            disabled={processing}\n                            onChange={(e)=> {setLastName(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Email\n                        <input \n                            type=\"text\"\n                            value={email}\n                            disabled={processing}\n                            onChange={(e)=> {setEmail(e.target.value)}}\n                        />\n                    </label>\n                    <CardSection />\n                    <button \n                        id=\"checkout_button\" \n                        disabled={!stripe || processing}    \n                    >\n                        {checkoutText} \n                    </button>\n                    <p className=\"error_message\">{errorMessage}</p>\n                </form>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useState } from 'react';\n\nexport const SuccessPopup = ({isOpen, closeFunction}) => {\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup success_popup\">\n                <button onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Success</h1>\n                    <h2>Your payment was sucessfully processed.</h2>\n                </div>\n                <div id=\"success_body\">\n                    You will recieve a welcome email from us soon to confirm that you are good to go! If you do\n                         not recieve an email from us in the next 10 minutes or if you have any questions please\n                         send us an email!\n                </div>\n                <a href=\"mailto:support@mydinnerpal.com\" target=\"_blank\" class=\"try_free_button\">Email Us</a>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\n\nexport const CreateAccountPopup = ({isOpen, closeFunction, toLogIn}) => {\n    let [processing, setProcessing] = useState(false);\n    \n    const [email, setEmail] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [accessCode, setAccessCode] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n\n    let buttonText = \"Create Account\";\n    if(processing){\n        buttonText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup success_popup\">\n                <button onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Create account</h1>\n                    <h2>Create your account below. Beta feature only</h2>\n                </div>\n                <form onSubmit={async (event) => {\n                    event.preventDefault();\n                    setProcessing(true);\n                    try {\n                        const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/signup', \n                            {'email': email,'firstName': firstName,'lastName': lastName,\n                            'password': password,'confirmPassword': confirmPassword,\n                            'accessCode': accessCode});\n                        if(res.data.auth == true){\n                            localStorage.setItem('token', res.data.token);\n                            setEmail('');\n                            setFirstName('');\n                            setLastName('');\n                            setPassword('');\n                            setConfirmPassword('');\n                            setAccessCode('');\n                            setErrorMessage('');\n                            closeFunction();\n                            window.location.reload(false);\n                        } else {\n                            console.log(res.data);\n                            setErrorMessage(res.data.message);\n                        }\n                    } catch (error) {\n                        setErrorMessage('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                        console.log(error);\n                    }\n                    setProcessing(false);\n                }}>\n                    <label>\n                        Email\n                        <input \n                            type=\"text\"\n                            value={email}\n                            disabled={processing}\n                            onChange={(e)=> {setEmail(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        First name\n                        <input \n                            type=\"text\"\n                            value={firstName}\n                            disabled={processing}\n                            onChange={(e)=> {setFirstName(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Last Name\n                        <input \n                            type=\"text\"\n                            value={lastName}\n                            disabled={processing}\n                            onChange={(e)=> {setLastName(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Password\n                        <input \n                            type=\"text\"\n                            value={password}\n                            disabled={processing}\n                            onChange={(e)=> {setPassword(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Confirm Password\n                        <input \n                            type=\"text\"\n                            value={confirmPassword}\n                            disabled={processing}\n                            onChange={(e)=> {setConfirmPassword(e.target.value)}}\n                        />\n                    </label>\n                    <label id=\"access_code_label\">\n                        Special Access Code\n                        <input \n                            type=\"text\"\n                            value={accessCode}\n                            disabled={processing}\n                            onChange={(e)=> {setAccessCode(e.target.value)}}\n                        />\n                    </label>\n                    <button className=\"popup_form_button\" disabled={processing}>\n                        {buttonText}\n                    </button>\n                    <a className=\"forgot_password_link\" onClick={()=>{toLogIn();}}>Already have an account? Click here to log in</a>\n                    <p className=\"error_message\">{errorMessage}</p>\n                </form>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useState } from 'react';\nimport { BillCycleSelector } from '../BillCycleSelector';\nimport { IdeasOnlyPanel } from '../IdeasOnlyPanel';\nimport { ProPanel } from '../ProPanel';\nimport { CheckoutPopup } from '../CheckoutPopup';\nimport { SuccessPopup } from '../SuccessPopup';\nimport { CreateAccountPopup } from '../CreateAccountPopup';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\n//Use this key for live data\nconst stripePromise = loadStripe(\"pk_live_51IgxffKIKjam29K6W8nvTk8u20ikPl5oxnJ9U1RR0MjYjXPqnA9lb9BKfmCW9hI4GHAjEikH5KENqoRnefnADeTA00SRjyRFQp\");\n\nexport const Home = ({openLogIn}) => {\n    const [annualCycleSelected, setAnnualCycleSelected] = useState(true);\n    const [checkoutOpen, setCheckoutOpen] = useState(false);\n    const [successOpen, setSucessOpen] = useState(false);\n    const [createAccountOpen, setCreateAccountOpen] = useState(false);\n\n    const [plan, setPlan] = useState('');\n    const [billCycle, setBillCycle] = useState('');\n    const [price, setPrice] = useState('');\n\n    return(<>\n        <div class=\"hero\">\n            <div id=\"hero_body\">\n                <div class=\"big_title\">Is deciding what to cook annoying?</div>\n                <p class=\"big_subtitle\">We make weekday cooking stress free by sending you an easy meal plan and grocery\n                    list every week! </p>\n                <a class=\"header_buttion hero_button\" href=\"#pricing_panel_selector\">Sign up / Try FREE</a>\n            </div>\n            <img id=\"main_hero\" src=\"/images/mushroom_risotto.jpg\" alt=\"hero\"></img>\n        </div>\n\n        <div class=\"features_panel\">\n            <h1 class=\"features_header\">Never worry about what to cook again!</h1>\n            <h2>Save time in the kitchen and reduce food waste</h2>\n            <div class=\"benefits_panel\">\n                <div class=\"benefit\">\n                    <img class=\"benefits_icon\" src=\"/images/Time Icon.png\" alt=\"hero\"></img>\n                    <h1 class=\"benefit_header\">Save Time</h1>\n                    <h2 class=\"benefit_text\"> Don’t waste time worrying about what to eat! We send you meal plans every week\n                        to make cooking straightfoward!</h2>\n                    <img class=\"benefit_image\" src=\"/images/3122022 Pro Meal Plan (meal plan).png\" alt=\"hero\"></img>\n                </div>\n                <div class=\"benefit\">\n                    <img class=\"benefits_icon\" src=\"/images/No Stress Icon.png\" alt=\"hero\"></img>\n                    <h1 class=\"benefit_header\">Be Stress Free</h1>\n                    <h2 class=\"benefit_text\"> Have all the planning and quality testing be done for you! We only include recipies we’ve\n                        tested for quality and ease!</h2>\n                    <img class=\"benefit_image\" src=\"/images/3122022 Pro Meal Plan (recipe).png\" alt=\"hero\"></img>\n                </div>\n                <div class=\"benefit\">\n                    <img class=\"benefits_icon\" src=\"/images/No Waste Icon.png\" alt=\"hero\"></img>\n                    <h1 class=\"benefit_header\">Reduce Waste</h1>\n                    <h2 class=\"benefit_text\"> Don’t buy things you don’t need at the grocery store! We send you a grocery\n                        list every week so you know exactly what you need to buy!</h2>\n                    <img class=\"benefit_image\" src=\"/images/3122022 Pro Meal Plan (grocery list).png\" alt=\"hero\"></img>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"levels_panel\">\n            <h1 class=\"levels_header\">100+ delicious doable recipes and growing!</h1>\n            <h2 class=\"levels_subheader\">Perfect for busy people who love good food!</h2>\n            <div class='row'>\n                <div class='column'>\n                    <img src='images/Recipe_Gallery_Images/spicy_katsu_sandwich.jpg' ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/chicken_marsala.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/chicken_platter.jpg\" ></img>\n                </div>\n                <div class='column'>\n                    <img src=\"/images/Recipe_Gallery_Images/kbbq_pork_chops.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/asian_sesame_burger.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/lamb_keema_pav.jpg\" ></img>\n                </div>\n                <div class='column'>\n                    <img src=\"/images/Recipe_Gallery_Images/carbonara.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/mediteranian_bowl.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/red_wine_pork_chops.jpg\" ></img>\n                </div>\n                <div class='column'>\n                    <img src=\"/images/Recipe_Gallery_Images/pork_burger.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/broccoli_cheddar_soup.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/kbbq_fried_rice.jpg\" ></img>\n                </div>\n                <div class='column'>\n                    <img src=\"/images/Recipe_Gallery_Images/curry_chicken_burrito.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/roasted_chicken_bowl.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/meatball_sub.jpg\" ></img>\n                </div>\n                <div class='column'>\n                    <img src=\"/images/Recipe_Gallery_Images/italian_pesto_sub.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/lamb_gyros.jpg\" ></img>\n                    <img src=\"/images/Recipe_Gallery_Images/BMT_bananna_jam_parfait.jpg\" ></img>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"pricing_panel\" id=\"pricing_panel_selector\">\n            <h1 class=\"short_title\">Try free for 30 Days!</h1>\n            <h2 class=\"short_subtitle\">No risk! If we aren’t able to make your life easier in the next month just\n                cancel! No hard feelings!\n            </h2>\n            <BillCycleSelector \n                isOn={annualCycleSelected}\n                handleToggle={() => setAnnualCycleSelected(!annualCycleSelected)}\n            />\n            <div class=\"pricing_plans_container\">\n                <IdeasOnlyPanel\n                    annualBilling={annualCycleSelected}\n                    onClickFunction={\n                        () => {\n                            setCheckoutOpen(true)\n                            setPlan(\"Ideas Only\");\n                            if(annualCycleSelected){\n                                setBillCycle(\"year\");\n                                setPrice(\"$19.08\");\n                            }else{\n                                setBillCycle(\"month\");\n                                setPrice(\"$1.99\");\n                            }\n                        }\n                    }\n                />\n                <ProPanel\n                    annualBilling={annualCycleSelected}\n                    onClickFunction={\n                        () => {\n                            setCheckoutOpen(true)\n                            setPlan(\"Pro\");\n                            if(annualCycleSelected){\n                                setBillCycle(\"year\");\n                                setPrice(\"$47.88\");\n                            }else{\n                                setBillCycle(\"month\");\n                                setPrice(\"$4.99\");\n                            }\n                        }\n                    }\n                />\n                <div class=\"pricing_plan beta_plan\">\n                    <h1>Beta Tester</h1>\n                    <p>Sign up with your early access code to become an early access beta tester!</p>\n                    <div class=\"price_wrapper\">\n                        <h1 class=\"price\">Special Pricing</h1>\n                    </div>\n                    <div class=\"features_in_plan\">\n                        <div class=\"row_flex feature\">\n                            <img src=\"/images/Check Icon.png\"></img>\n                            <h2>Weekly meal plans</h2>\n                        </div>\n                        <div class=\"row_flex feature\">\n                            <img src=\"/images/Check Icon.png\"></img>\n                            <h2>Weekly grocery lists</h2>\n                        </div>\n                        <div class=\"row_flex feature\">\n                            <img src=\"/images/Check Icon.png\"></img>\n                            <h2>Recipies Included</h2>\n                        </div>\n                        <div class=\" row_flex feature\">\n                            <img src=\"/images/Check Icon.png\"></img>\n                            <h2>Early access to features</h2>\n                        </div>\n                    </div>\n                    <button onClick={()=>{setCreateAccountOpen(true);}} class=\"try_free_button\">Sign Up</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"our_story\">\n            <h1>Our Story</h1>\n            <div class=\"story_inner\">\n                <img src=\"/images/Profile Picture.jpeg\"></img>\n                <p>Hi, my name is Kush! I founded My Dinner Pal to create a world where you don't \n                    have to stress about what to eat during the week. As someone who is super \n                    passionate about cooking and invests a lot of time in their health, when I \n                    started living on my own for the first time I would spend 3-4 hours a week \n                    minimum planning out what to cook during the week. Most of this time was spent \n                    sifting through thousands of recipes on Google, looking for inspiration for \n                    meals that were delicious and well balanced. After doing this every week for \n                    over a year I realized that life would be much easier if there was a tool that \n                    learned my food preferences and suggested a small number of quality tested and \n                    well balanced meals every week that I could simply say “yes” or “no” to until \n                    I was happy with the resulting meal plan, and that is where My Dinner Pal \n                    started. While My Dinner Pal is a simple email subscription today that sends \n                    out weekly meal plans, in the future I am to build an AI powered tool that \n                    learns your food preferences and can easily and quickly generate the perfect \n                    meal plan for you every week so that you can reduce stress and spend more time \n                    on the things that are important to you! If you have any questions or want to \n                    chat about anything, feel free to shoot me a text at (336)406-8998 or shoot me \n                    an email at kushagrachopra16@gmail.com :)\n                </p>\n            </div>\n        </div>\n        <Elements stripe={stripePromise}>\n            <CheckoutPopup\n                isOpen={checkoutOpen}\n                closeFunction={() => {\n                    setCheckoutOpen(false);\n                }}\n                plan={plan}\n                billCycle={billCycle}\n                price={price}\n                toSuccessFunction={() => {\n                    setCheckoutOpen(false);\n                    setSucessOpen(true);\n                }}\n            />\n        </Elements>\n        <SuccessPopup\n            isOpen={successOpen}\n            closeFunction={() => {\n                setSucessOpen(false);\n            }}\n        />\n        <CreateAccountPopup\n            isOpen={createAccountOpen}\n            toLogIn={()=>{\n                setCreateAccountOpen(false);\n                openLogIn();\n            }}\n            closeFunction={() => {\n                setCreateAccountOpen(false)\n            }}\n        />\n    </>);\n}","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const Loading = ({}) => {\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n    return (<>\n        <div style={{width: '100%', margin: \"10px 0 0\", display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n            <h2 style={{margin: \"15px\"}}>Loading</h2>\n            <motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />\n        </div>\n    </>);\n};","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\n\nexport const ConfirmActionPopup = ({processing, isOpen, closeFunction, title, subtitle, confirmButtonInitialText, errorMessage, confirmFunction}) => {\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n\n    let confirmButtonText = confirmButtonInitialText;\n    let cancelButtonText = \"Cancel\";\n    if(processing){\n        confirmButtonText = cancelButtonText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup success_popup\">\n                <button onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>{title}</h1>\n                    <h2>{subtitle}</h2>\n                </div>\n                <button className=\"popup_form_button\" disabled={processing} onClick={confirmFunction}>\n                    {confirmButtonText}\n                </button>\n                <button className=\"popup_form_button_white_background\" disabled={processing} style={{'margin-top': '15px'}} onClick={closeFunction}>\n                    {cancelButtonText}\n                </button>\n                <p className=\"error_message\">{errorMessage}</p>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useEffect, useState } from 'react';\nimport { Loading } from '../Loading';\nimport axios from 'axios';\nimport { addScaleCorrection, motion } from 'framer-motion';\nimport { ConfirmActionPopup } from '../ConfirmActionPopup';\n\nexport const MyAccount = ({validateToken}) => { \n    const [confirmPauseEmailsPopupOpen, setConfirmPauseEmailsPopupOpen] = useState(false);\n\n    const [confirmDeleteAccountPopupOpen, setConfirmDeleteAccountPopupOpen] = useState(false);\n    \n    const [processing, setProcessing] = useState(false);\n\n    let user = JSON.parse(localStorage.getItem('user'));\n    const [email, setEmail] = useState(user.email);\n    const [firstName, setFirstName] = useState(user.first_name);\n    const [lastName, setLastName] = useState(user.last_name); \n    \n    const [errorMessageAccountDetails, setErrorMessageAccountDetails] = useState('');\n\n\n    const [passwordInput, setPasswordInput] = useState('');\n    const [confirmPasswordInput, setConfirmPasswordInput] = useState('');\n\n    const [errorMessagePasswordInput, setErrorMessagePasswordInput] = useState('');\n\n    const [errorMessagePauseEmailsPopup, setErrorMessagePauseEmailsPopup] = useState('');\n    const [errorMessageDeleteAccountPopup, setErrorMessageDeleteAccountPopup] = useState('');\n\n    const [errorMessageResumeEmails, setErrorMessageResumeEmails] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n\n    let accountDetailsButtonText = \"Submit Changes\";\n    let changePasswordButtonText = \"Submit Changes\";\n    let pauseEmailsButtonText = \"Pause weekly meal plans\";\n    let resumeEmailsButtonText = \"Resume weekly meal plans\";\n    let deleteAccountButtonText = \"Delete my account\";\n    \n    if(processing){\n        accountDetailsButtonText=changePasswordButtonText=pauseEmailsButtonText=resumeEmailsButtonText=deleteAccountButtonText  = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n    let resumeEmails = async () => {\n        setProcessing(true);\n        setErrorMessageResumeEmails();\n        try {\n            const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/updateEmailsPaused', {\"emailsPaused\":0}, {'headers': {\n                'x-access-token': localStorage.getItem('token')\n            }});\n            if(res.data.updateSuccessful == true){\n                localStorage.setItem('token', res.data.token);\n                validateToken();\n                setErrorMessageResumeEmails();\n            } else {\n                console.log(res.data);\n                setErrorMessageResumeEmails(res.data.message);\n            }\n        } catch (error) {\n            setErrorMessageResumeEmails('Please email support@mydinnerpal.com, something is wrong on our end :)');\n            console.log(error);\n        }\n        setProcessing(false);\n    };\n\n    let setPauseEmailButton = () => {\n        if(user.emails_paused){\n            return(<>\n                <button className=\"popup_form_button_white_background\" disabled={processing} onClick={()=>{resumeEmails();}}>\n                    {resumeEmailsButtonText}\n                </button>\n            </>);\n        }\n        return(<>\n            <button className=\"popup_form_button_white_background\" disabled={processing} onClick={()=>{setConfirmPauseEmailsPopupOpen(true);}}>\n                {pauseEmailsButtonText}\n            </button>\n        </>);\n    }\n\n    let setUserInfo = () => {\n        if(localStorage.getItem('user')){\n            return(<>\n            <div class=\"myaccount_inner_container\">\n                <div class='account_info_container'>\n                    <h2 class=\"myaccount_subheader\">Account Details</h2>\n                    <form onSubmit={async (event) => {\n                        event.preventDefault();\n                        setProcessing(true);\n                        setErrorMessageAccountDetails();\n                        try {\n                            const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/updateUserInfo', {'first_name': firstName,'last_name': lastName, 'email': JSON.parse(localStorage.getItem('user')).email, 'new_email': email}, {'headers': {\n                                'x-access-token': localStorage.getItem('token')\n                            }});\n                            if(res.data.updateSuccessful == true){\n                                localStorage.setItem('token', res.data.token);\n                                validateToken();\n                            } else {\n                                console.log(res.data);\n                                setErrorMessageAccountDetails(res.data.message);\n                            }\n                        } catch (error) {\n                            setErrorMessageAccountDetails('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                            console.log(error);\n                        }\n                        setProcessing(false);\n                    }}>\n                        <label>\n                            Email\n                            <input \n                                type=\"text\"\n                                value={email}\n                                disabled={processing}\n                                onChange={(e)=> {setEmail(e.target.value)}}\n                            />\n                        </label>\n                        <label>\n                            First Name\n                            <input \n                                type=\"text\"\n                                value={firstName}\n                                disabled={processing}\n                                onChange={(e)=> {setFirstName(e.target.value)}}\n                            />\n                        </label>\n                        <label>\n                            Last Name\n                            <input \n                                type=\"text\"\n                                value={lastName}\n                                disabled={processing}\n                                onChange={(e)=> {setLastName(e.target.value)}}\n                            />\n                        </label>\n                        <button className=\"popup_form_button\" disabled={processing}>\n                            {accountDetailsButtonText}\n                        </button>\n                        <p className=\"error_message\" style={{'color': '#EC7071'}}>{errorMessageAccountDetails}</p>\n                    </form>\n                </div>\n                <div class='account_info_container'>\n                    <h2 class=\"myaccount_subheader\">Change Password</h2>\n                    <form onSubmit={async (event) => {\n                        event.preventDefault();\n                        setProcessing(true);\n                        setErrorMessagePasswordInput();\n                        try {\n                            const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/updatePassword', {'password': passwordInput,'confirmPassword': confirmPasswordInput}, {'headers': {\n                                'x-access-token': localStorage.getItem('token')\n                            }});\n                            if(res.data.updateSuccessful == true){\n                                localStorage.setItem('token', res.data.token);\n                                validateToken();\n                                setPasswordInput('');\n                                setConfirmPasswordInput('');\n                                setErrorMessagePasswordInput('Successfully changed password');\n                            } else {\n                                console.log(res.data);\n                                setErrorMessagePasswordInput(res.data.message);\n                            }\n                        } catch (error) {\n                            setErrorMessagePasswordInput('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                            console.log(error);\n                        }\n                        setProcessing(false);\n                    }}>\n                        <label>\n                            New Password\n                            <input \n                                type=\"text\"\n                                value={passwordInput}\n                                disabled={processing}\n                                onChange={(e)=> {setPasswordInput(e.target.value)}}\n                            />\n                        </label>\n                        <label>\n                            Confirm New Password\n                            <input \n                                type=\"text\"\n                                value={confirmPasswordInput}\n                                disabled={processing}\n                                onChange={(e)=> {setConfirmPasswordInput(e.target.value)}}\n                            />\n                        </label>\n                        <button className=\"popup_form_button\" disabled={processing}>\n                            {changePasswordButtonText}\n                        </button>\n                        <p className=\"error_message\" style={{'color': '#EC7071'}}>{errorMessagePasswordInput}</p>\n                    </form>\n                </div>\n                <div class='account_info_container'>\n                    <h2 class=\"myaccount_subheader\">Other Actions</h2>\n                    {setPauseEmailButton()}\n                    <p className=\"error_message\" style={{'color': '#EC7071', 'margin-bottom': '0'}}>{errorMessageResumeEmails}</p>\n                    <button className=\"popup_form_button_white_background\" disabled={processing} onClick={()=>{setConfirmDeleteAccountPopupOpen(true);}}>\n                        {deleteAccountButtonText}\n                    </button>\n                </div>\n             </div>\n             <ConfirmActionPopup\n                processing={processing}\n                isOpen={confirmPauseEmailsPopupOpen}\n                closeFunction={async () => {\n                    setConfirmPauseEmailsPopupOpen(false);\n                }}\n                title={\"Pause Weekly Meal Plans\"}\n                subtitle={\"Click “Pause weekly meal plans to confirm that you would like to pause recieveing your weekly meal plan.\"}\n                confirmButtonInitialText={\"Pause weekly meal plans\"}\n                errorMessage={errorMessagePauseEmailsPopup}\n                confirmFunction={async () => {\n                    setProcessing(true);\n                    setErrorMessagePauseEmailsPopup();\n                    try {\n                        const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/updateEmailsPaused', {\"emailsPaused\":1}, {'headers': {\n                            'x-access-token': localStorage.getItem('token')\n                        }});\n                        if(res.data.updateSuccessful == true){\n                            localStorage.setItem('token', res.data.token);\n                            validateToken();\n                            setConfirmPauseEmailsPopupOpen(false);\n                        } else {\n                            console.log(res.data);\n                            setErrorMessagePauseEmailsPopup(res.data.message);\n                        }\n                    } catch (error) {\n                        setErrorMessagePauseEmailsPopup('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                        console.log(error);\n                    }\n                    setProcessing(false);\n                }}\n            />\n            <ConfirmActionPopup\n                processing={processing}\n                isOpen={confirmDeleteAccountPopupOpen}\n                closeFunction={() => {\n                    setConfirmDeleteAccountPopupOpen(false);\n                }}\n                title={\"Delete My Account\"}\n                subtitle={\"Click “Permanently Delete my account” to confirm that you would like to perminently delete your account and stop recieving meal plans from My Dinner Pal.\"}\n                confirmButtonInitialText={\"Permanently Delete My Account\"}\n                errorMessage={errorMessageDeleteAccountPopup}\n                confirmFunction={async () => {\n                    setProcessing(true);\n                    setErrorMessageDeleteAccountPopup();\n                    try {\n                        const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/deleteAccount', {\"email\":JSON.parse(localStorage.getItem('user')).email}, {'headers': {\n                            'x-access-token': localStorage.getItem('token')\n                        }});\n                        if(res.data.updateSuccessful == true){\n                            localStorage.setItem('token', res.data.token);\n                            validateToken();\n                            setConfirmDeleteAccountPopupOpen(false);\n                        } else {\n                            console.log(res.data);\n                            setErrorMessageDeleteAccountPopup(res.data.message);\n                        }\n                    } catch (error) {\n                        setErrorMessageDeleteAccountPopup('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                        console.log(error);\n                    }\n                    setProcessing(false);\n                }}\n            />\n            </>);\n        }else {\n            return <Loading/>;\n        }\n    }\n    return(<>\n        <div className=\"my_account_title\">\n            <h1>My Account</h1>\n        </div>\n        {setUserInfo()}\n    </>);\n}","import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport { Loading } from '../Loading';\n\nexport const PrivateRoute = ({validatingToken, loginStatus, children}) => {\n    if(loginStatus){\n        return children;\n    }else if(validatingToken) {\n        return <Loading/>;\n    }else {\n        return <Navigate to=\"/\"/>;\n    }\n};","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\n\nexport const ResetPasswordPopup = ({isOpen, closeFunction, toLoginFunction}) => {\n    let [processing, setProcessing] = useState(false);\n    \n    const [email, setEmail] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n\n    let buttonText = \"Send password reset email\";\n    if(processing){\n        buttonText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup success_popup\">\n                <button onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Reset Password</h1>\n                    <h2>Enter your email below.</h2>\n                </div>\n                <form onSubmit={async (event) => {\n                    event.preventDefault();\n                    setErrorMessage();\n                    setProcessing(true);\n                    try {\n                        const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/send_password_reset_email', {'email': email});\n                        if(res.data.success == true){\n                            setEmail('');\n                            setErrorMessage(`Password reset email successfully sent to ${email}. Please email support@mydinnerpal.com if you can't find it :)`);\n                        } else {\n                            console.log(res.data);\n                            setErrorMessage(res.data.message);\n                        }\n                    } catch (error) {\n                        setErrorMessage('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                        console.log(error);\n                    }\n                    setProcessing(false);\n                }}>\n                    <label>\n                        Email\n                        <input \n                            type=\"text\"\n                            value={email}\n                            disabled={processing}\n                            onChange={(e)=> {setEmail(e.target.value)}}\n                        />\n                    </label>\n                    <button className=\"popup_form_button\" disabled={processing}>\n                        {buttonText}\n                    </button>\n                    <a className=\"forgot_password_link\" onClick={()=>{toLoginFunction();}}>Already have an account? Click here to log in</a>\n                    <p className=\"error_message\">{errorMessage}</p>\n                </form>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useEffect, useState } from 'react';\nimport { Navigate, useSearchParams } from 'react-router-dom';\nimport { Loading } from '../Loading';\nimport axios from 'axios';\nimport { addScaleCorrection, motion } from 'framer-motion';\n\nexport const ResetPasswordPage = ({loginStatus, validateToken}) => { \n    const [searchParams, setSearchParams] = useSearchParams();\n    let urlToken = searchParams.get(\"token\");\n\n    const [processing, setProcessing] = useState(false);\n\n    const [passwordInput, setPasswordInput] = useState('');\n    const [confirmPasswordInput, setConfirmPasswordInput] = useState('');\n\n    const [errorMessagePasswordInput, setErrorMessagePasswordInput] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n\n    let buttonText = \"Reset Password\";\n    \n    if(processing){\n        buttonText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n    if(loginStatus){\n        return <Navigate to=\"/account\"/>;\n    }\n\n    if(!urlToken){\n        return <>\n            <h1>Sorry, token not detected :(</h1>\n            <h2>Please email support@mydinnerpal.com and we'll help you reset your password promptly!</h2>\n        </>\n    }\n\n    return(<>\n            <div className=\"my_account_title\">\n                <h1>Reset Password</h1>\n            </div>\n            <div class=\"myaccount_inner_container\">\n                <div class='account_info_container' id=\"reset_password_form_container\">\n                    <form onSubmit={async (event) => {\n                        event.preventDefault();\n                        setProcessing(true);\n                        setErrorMessagePasswordInput();\n                        try {\n                            const res = await axios.post('https://my-dinner-pal-prod-backend.herokuapp.com/updatePassword', {'password': passwordInput,'confirmPassword': confirmPasswordInput}, {'headers': {\n                                'x-access-token': urlToken\n                            }});\n                            if(res.data.updateSuccessful == true){\n                                localStorage.setItem('token', res.data.token);\n                                validateToken();\n                                setPasswordInput('');\n                                setConfirmPasswordInput('');\n                                setErrorMessagePasswordInput('Successfully changed password');\n                            } else {\n                                console.log(res.data);\n                                setErrorMessagePasswordInput(res.data.message);\n                            }\n                        } catch (error) {\n                            setErrorMessagePasswordInput('Please email support@mydinnerpal.com, something is wrong on our end :)');\n                            console.log(error);\n                        }\n                        setProcessing(false);\n                    }}>\n                        <label>\n                            New Password\n                            <input \n                                type=\"text\"\n                                value={passwordInput}\n                                disabled={processing}\n                                onChange={(e)=> {setPasswordInput(e.target.value)}}\n                            />\n                        </label>\n                        <label>\n                            Confirm New Password\n                            <input \n                                type=\"text\"\n                                value={confirmPasswordInput}\n                                disabled={processing}\n                                onChange={(e)=> {setConfirmPasswordInput(e.target.value)}}\n                            />\n                        </label>\n                        <button className=\"popup_form_button\" disabled={processing}>\n                            {buttonText}\n                        </button>\n                        <p className=\"error_message\" style={{'color': '#EC7071'}}>{errorMessagePasswordInput}</p>\n                    </form>\n                </div>\n            </div>\n    </>);\n}","import React, { useEffect, useState } from 'react';\nimport { LogInPopup } from '../LogInPopup';\nimport { Home } from '../Home';\nimport { MyAccount } from '../MyAccount';\nimport { PrivateRoute } from '../PrivateRoute';\nimport { ResetPasswordPopup } from '../ResetPasswordPopup';\nimport { ResetPasswordPage } from '../ResetPasswordPage';\nimport axios from 'axios';\n\nimport { Route, BrowserRouter as Router, Routes, Link, Navigate} from \"react-router-dom\";\n\nexport const App = () => {\n    const [loginOpen, setLoginOpen] = useState(false);\n    const [loginStatus, setLoginStatus] = useState(false);\n    const [validatingToken, setValidatingToken] = useState(true);\n\n    const [resetPasswordOpen, setResetPasswordOpen] = useState(false);\n\n    let validateToken = async () => {\n        console.log('ran');\n        if(localStorage.getItem('token')){\n            setValidatingToken(true);\n            try {\n                const res = await axios.get('https://my-dinner-pal-prod-backend.herokuapp.com/getUserInfo', {\n                    'headers': {\n                        'x-access-token': localStorage.getItem('token')\n                    }\n                }); \n                // const res = {'data': {\n                //     'auth': false\n                // }};\n                if(res.data.auth == true){\n                    setLoginStatus(true);\n                    localStorage.setItem('user', JSON.stringify(res.data.user));\n                    // localStorage.setItem('test','test');\n                } else {\n                    setLoginStatus(false);\n                }\n            } catch (error) {\n                console.log(error);\n                setLoginStatus(false);\n            }\n        }\n        setValidatingToken(false);\n    }\n    useEffect(() => {\n        validateToken();\n    }, []);\n\n    let setNavButtons = (loginStatus) => {\n        if(loginStatus){\n            return (<>\n                <a onClick={() => {\n                            localStorage.clear();\n                            validateToken();\n                            window.location.reload(false);\n                        }} class=\"header_buttion log_in_button\">Sign out</a>\n                <Link to=\"/account\" class=\"header_buttion\">My Account</Link>\n            </>);\n        }\n        return (<>\n            <a onClick={() => {setLoginOpen(true)}} class=\"header_buttion log_in_button\">Log in</a>\n            <a class=\"header_buttion\" href=\"#pricing_panel_selector\">Sign up / Try FREE</a>\n        </>);\n    }\n\n    return (<>\n    <Router>\n    <div class=\"main_page_wrapper\">\n    <header class=\"site-header\">\n        <Link to=\"/\" class=\"site-identity\">\n                <img src=\"/images/My Dinner Pal Mustache Logo.png\" alt=\"My Dinner Pal Logo\"></img>\n                <h1>\n                    <href id=\"nav_header\">My Dinner Pal</href>\n                </h1>\n        </Link>\n        <div class=\"header_button_wrapper\">\n           {setNavButtons(loginStatus)}\n        </div>\n    </header>\n\n    <Routes>\n        <Route path=\"*\" to=\"/\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/\" \n            element={<Home\n                openLogIn={()=>{\n                    setLoginOpen(true);\n                }}\n            />} \n        \n        />\n        <Route \n            path='/account' \n            element={\n                <PrivateRoute\n                validatingToken={validatingToken}    \n                loginStatus={loginStatus}\n                >\n                    <MyAccount\n                        validateToken={validateToken}\n                    />\n                </PrivateRoute>\n            } \n        />\n        <Route path=\"/reset_password\" \n            element={<ResetPasswordPage\n            validateToken={validateToken}\n                loginStatus={loginStatus}\n            />} \n        />\n    </Routes>\n    </div>\n    <div class=\"footer\">\n        <div class=\"footer_info\">\n            <p>© 2022 by My Dinner Pal LLC</p>\n            <p>Please contact us with any questions or conscerns!</p>\n            <p>To upgrade or cancel your subscription just send us an email and we will take care of it promptly!</p>\n            <p>support@mydinnerpal.com</p>\n            <p>(336) 406-8998</p>\n        </div>\n    </div>\n\n    <LogInPopup\n        isOpen={loginOpen}\n        closeFunction={() => {\n            setLoginOpen(false);\n        }}\n        setLoginStatus = {setLoginStatus}\n        toResetPasswordFunction={() => {\n            setLoginOpen(false);\n            setResetPasswordOpen(true);\n        }}\n    />\n    <ResetPasswordPopup\n         isOpen={resetPasswordOpen}\n         closeFunction={() => {\n             setResetPasswordOpen(false);\n         }}\n         toLoginFunction={() => {\n            setResetPasswordOpen(false);\n            setLoginOpen(true);\n        }}\n    />\n    </Router>\n    </>)\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}