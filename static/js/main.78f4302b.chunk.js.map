{"version":3,"sources":["BillCycleSelector/BillCycleSelector.jsx","IdeasOnlyPanel/IdeasOnlyPanel.jsx","ProPanel/ProPanel.jsx","CardSection/CardSection.jsx","CheckoutPopup/CheckoutPopup.jsx","Success Popup/SuccessPopup.jsx","App/App.jsx","index.jsx"],"names":["BillCycleSelector","isOn","handleToggle","yearlyClass","discountText","discountClass","className","checked","onChange","id","type","IdeasOnlyPanel","annualBilling","onClickFunction","billString","price","class","src","process","onClick","ProPanel","CardSection","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CheckoutPopup","isOpen","closeFunction","plan","billCycle","toSuccessFunction","stripe","useStripe","elements","useElements","useState","processing","setProcessing","firstName","setFirstName","lastName","setLastName","email","setEmail","errorMessage","setErrorMessage","spinTransition","loop","Infinity","ease","duration","checkoutText","motion","span","display","width","height","border","borderTop","borderRadius","boxSizing","animate","rotate","transition","handleSubmitSub","event","a","createPaymentMethod","card","getElement","CardElement","billing_details","name","result","error","console","log","message","axios","post","paymentMethod","res","data","code","raw","client_secret","status","confirmCardSetup","then","cardSetup","document","body","overflow","disabled","onSubmit","value","e","target","SuccessPopup","href","stripePromise","loadStripe","App","annualCycleSelected","setAnnualCycleSelected","checkoutOpen","setCheckoutOpen","successOpen","setSucessOpen","setPlan","setBillCycle","setPrice","alt","ReactDOM","render","getElementById"],"mappings":"uJAEaA,EAAoB,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aACjCC,EAAc,GACdC,EAAe,UACfC,EAAgB,mBAOpB,OANY,IAATJ,IACCE,EAAc,QACdC,EAAe,WACfC,EAAgB,gBAGb,mCACH,sBAAKC,UAAU,sBAAf,UACI,wBAAOA,UAAU,mBAAjB,UACI,sBAAMA,UAAU,UAAhB,4BACA,uBAAOC,QAASN,EAAMO,SAAUN,EAAcO,GAAG,eAAeC,KAAK,aACrE,sBAAMJ,UAAU,WAChB,sBAAMA,UAAqBH,EAA3B,gCAEJ,sBAAMM,GAAG,uBAAT,SACI,oBAAIH,UAAWD,EAAf,SAA+BD,YCnBlCO,EAAiB,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,gBACvCC,EAAa,UACbC,EAAQ,QAMZ,OALGH,IACCE,EAAa,SACbC,EAAQ,SAGL,mCACH,sBAAKC,MAAM,eAAeP,GAAG,aAA7B,UACI,4CACA,qHACA,sBAAKO,MAAM,gBAAX,UACI,qBAAIA,MAAM,QAAV,UAAmBD,EAAnB,IAA0B,sBAAMC,MAAM,aAAZ,uBAC1B,0CAAaF,EAAb,UAEJ,sBAAKE,MAAM,mBAAX,UACI,sBAAKA,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,sDAEJ,sBAAKF,MAAM,oBAAX,UACI,qBAAKC,IAAKC,6DACV,yDAGR,wBAAQC,QAASN,EAAiBG,MAAM,kBAAxC,sCC1BCI,EAAW,SAAC,GAAsC,IAArCR,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,gBACjCC,EAAa,UACbC,EAAQ,QAMZ,OALGH,IACCE,EAAa,SACbC,EAAQ,SAGL,mCACH,sBAAKC,MAAM,eAAeP,GAAG,WAA7B,UACI,qBAAKO,MAAM,eAAX,0BACA,qCACA,qHACA,sBAAKA,MAAM,gBAAX,UACI,qBAAIA,MAAM,QAAV,UAAmBD,EAAnB,IAA0B,sBAAMC,MAAM,aAAZ,uBAC1B,0CAAaF,EAAb,UAEJ,sBAAKE,MAAM,mBAAX,UACI,sBAAKA,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,sDAEJ,sBAAKF,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,yDAEJ,sBAAKF,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,sDAEJ,sBAAKF,MAAM,oBAAX,UACI,qBAAKC,IAAKC,6DACV,yDAGR,wBAAQC,QAASN,EAAiBG,MAAM,kBAAxC,sC,wDClCCK,EAAc,WAkBvB,OACI,iDAEA,cAAC,cAAD,CAAaC,QApBY,CACzBC,MAAO,CACHC,KAAM,CACNC,MAAO,UACPC,WAAY,0CACZC,cAAe,cACfC,SAAU,OACV,gBAAiB,CACbH,MAAO,YAGXI,QAAS,CACTJ,MAAO,UACPK,UAAW,mBCTVC,EAAgB,SAAC,GAAwE,IAAvEC,EAAsE,EAAtEA,OAAQC,EAA8D,EAA9DA,cAAeC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,UAAWpB,EAA8B,EAA9BA,MAAOqB,EAAuB,EAAvBA,kBACpEC,EAASC,sBACTC,EAAWC,wBAEjB,EAAkCC,oBAAS,GAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,CACnBC,KAAMC,IACNC,KAAM,SACNC,SAAU,GAaVC,EAAe,kBAChBf,IACCe,EAAgB,cAACC,EAAA,EAAOC,KAAR,CACIpC,MAbJ,CAChBqC,QAAS,QACTC,MAAO,OACPC,OAAQ,OACRC,OAAQ,oBACRC,UAAW,oBACXC,aAAc,MACdC,UAAW,cAOSC,QAAS,CAAEC,OAAQ,KACnBC,WAAYjB,KAwDpC,IAAMkB,EAAe,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,yDACfnC,GAAWE,EADI,yCAIT,+CAJS,UAOJ,IAAbK,EAPiB,yCAQT,oBARS,UAUL,IAAZE,EAViB,yCAWT,mBAXS,UAaR,IAATE,EAbiB,yCAcT,eAdS,wBAiBCX,EAAOoC,oBAAoB,CAC5C/D,KAAM,OACNgE,KAAMnC,EAASoC,WAAWC,eAC1BC,gBAAiB,CACLC,KAAMlC,EAAU,IAAIE,EAEpBE,MAAO,gCAvBH,aAiBd+B,EAjBc,QA2BTC,MA3BS,wBA4BhBC,QAAQC,IAAIH,EAAOC,MAAMG,SA5BT,kBA6BTJ,EAAOC,MAAMG,SA7BJ,yBA+BEC,IAAMC,KAAK,4BAA6B,CAAC,eAAkBN,EAAOO,cAAc7E,GAAI,MAASuC,EAAO,UAAaJ,EAAW,SAAYE,EAAU,KAAQZ,EAAM,UAAaC,IA/B/K,WA+BVoD,EA/BU,OAiChBN,QAAQC,IAAIK,IAETA,EAAIC,KAAKC,KAnCI,wBAoCZR,QAAQC,IAAI,kBACZD,QAAQC,IAAIK,EAAIC,KAAKE,IAAIP,SArCb,kBAsCLI,EAAIC,KAAKE,IAAIP,SAtCR,aAyCgBI,EAAIC,KAA7BG,EAzCS,EAyCTA,cAAeC,EAzCN,EAyCMA,OACtBX,QAAQC,IAAIU,GAEG,oBAAXA,EA5CY,kCA6CYvD,EAAOwD,iBAAiBF,GAAeG,MAAK,SAASf,GAEzE,OADAE,QAAQC,IAAIH,GACRA,EAAOC,OAGPC,QAAQC,IAAI,sBACZD,QAAQC,IAAIH,EAAOC,OAEZD,EAAOC,MAAMG,UAGpBF,QAAQC,IAAI,wCACL,cAzDH,eA6CNa,EA7CM,yBA4DLA,GA5DK,WA6DK,cAAXH,EA7DM,wBAgEZX,QAAQC,IAAI,qBAhEA,kBAiEL,WAjEK,iCAoEL,uEApEK,4CAAH,sDAyErB,OAAGlD,GACCgE,SAASC,KAAK1E,MAAM2E,SAAW,SACxB,qCACH,qBAAKC,SAAUzD,EAAYvB,QAASc,EAAejB,MAAM,qBACzD,sBAAKA,MAAM,iBAAX,UACI,wBAAQmF,SAAUzD,EAAYvB,QAASc,EAAexB,GAAG,aAAzD,oBACA,sBAAKH,UAAU,iBAAf,UACI,0CACA,sEAEJ,sBAAKA,UAAU,oBAAf,UACI,wDACA,uDAAoB,sBAAMU,MAAM,OAAZ,SAAoBkB,OACxC,yEAAuCnB,EAAvC,IAA+CoB,QAEnD,uBAAMiE,SAAQ,sBAAE,4BAAA5B,EAAA,6DACZ7B,GAAc,GADF,SAES2B,IAFT,OAENS,EAFM,OAGZpC,GAAc,GACA,YAAXoC,GAEC3C,IACAS,EAAa,IACbE,EAAY,IACZE,EAAS,IACTE,EAAgB,KAKhBA,EAAgB4B,GAfR,2CAAhB,UAkBI,+CAEI,uBACIrE,KAAK,OACL2F,MAAOzD,EACPuD,SAAUzD,EACVlC,SAAU,SAAC8F,GAAMzD,EAAayD,EAAEC,OAAOF,aAG/C,8CAEI,uBACI3F,KAAK,OACL2F,MAAOvD,EACPqD,SAAUzD,EACVlC,SAAU,SAAC8F,GAAMvD,EAAYuD,EAAEC,OAAOF,aAG9C,0CAEI,uBACI3F,KAAK,OACL2F,MAAOrD,EACPmD,SAAUzD,EACVlC,SAAU,SAAC8F,GAAMrD,EAASqD,EAAEC,OAAOF,aAG3C,cAAC,EAAD,IACA,wBAAQ5F,GAAG,kBAAkB0F,UAAW9D,GAAUK,EAAlD,SACKe,IAEL,mBAAGnD,UAAU,gBAAb,SAA8B4C,eAK9C8C,SAASC,KAAK1E,MAAM2E,SAAW,QACxB,+BC9OEM,EAAe,SAAC,GAA6B,IAA5BxE,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,cAClC,OAAGD,GACCgE,SAASC,KAAK1E,MAAM2E,SAAW,SACxB,qCACH,qBAAK/E,QAASc,EAAejB,MAAM,qBACnC,sBAAKA,MAAM,+BAAX,UACI,wBAAQG,QAASc,EAAexB,GAAG,aAAnC,oBACA,sBAAKH,UAAU,iBAAf,UACI,yCACA,4EAEJ,qBAAKG,GAAG,eAAR,mNAKA,mBAAGgG,KAAK,oCAAoCF,OAAO,SAASvF,MAAM,kBAAlE,8BAIZgF,SAASC,KAAK1E,MAAM2E,SAAW,QACxB,+B,QCbLQ,EAAgBC,YAAW,+GAEpBC,EAAM,WACf,MAAsDnE,oBAAS,GAA/D,mBAAOoE,EAAP,KAA4BC,EAA5B,KACA,EAAwCrE,oBAAS,GAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KACA,EAAqCvE,oBAAS,GAA9C,mBAAOwE,EAAP,KAAoBC,EAApB,KAEA,EAAwBzE,mBAAS,IAAjC,mBAAOP,EAAP,KAAaiF,EAAb,KACA,EAAkC1E,mBAAS,IAA3C,mBAAON,EAAP,KAAkBiF,EAAlB,KACA,EAA0B3E,mBAAS,IAAnC,mBAAO1B,EAAP,KAAcsG,EAAd,KAEA,OAAQ,qCACR,yBAAQrG,MAAM,cAAd,UACI,sBAAKA,MAAM,gBAAX,UACI,mBAAGyF,KAAK,IAAR,SACI,qBAAKxF,IAAKC,yEAAiEoG,IAAI,gBAEnF,6BACI,sBAAMb,KAAK,IAAIhG,GAAG,aAAlB,gCAGR,mBAAGO,MAAM,iBAAiByF,KAAK,0BAA/B,kCAGJ,sBAAKzF,MAAM,OAAX,UACI,qBAAKP,GAAG,YAAYQ,IAAKC,2FAAmFoG,IAAI,SAEhH,sBAAK7G,GAAG,YAAR,UACI,qBAAKO,MAAM,YAAX,gDACA,mBAAGA,MAAM,eAAT,gHAEA,oBAAGA,MAAM,cAAcyF,KAAK,0BAA5B,UACI,kDACA,mBAAGzF,MAAM,yBAKrB,sBAAKA,MAAM,iBAAX,UACI,oBAAIA,MAAM,kBAAV,mDACA,gFACA,sBAAKA,MAAM,iBAAX,UACI,sBAAKA,MAAM,UAAX,UACI,qBAAKA,MAAM,gBAAgBC,IAAKC,0DAAkDoG,IAAI,SACtF,oBAAItG,MAAM,iBAAV,uBACA,oBAAIA,MAAM,eAAV,kIAEA,qBAAKA,MAAM,gBAAgBC,IAAKC,yEAAiEoG,IAAI,YAEzG,sBAAKtG,MAAM,UAAX,UACI,qBAAKA,MAAM,gBAAgBC,IAAKC,+DAAuDoG,IAAI,SAC3F,oBAAItG,MAAM,iBAAV,4BACA,oBAAIA,MAAM,eAAV,mIAEA,qBAAKA,MAAM,gBAAgBC,IAAKC,wEAAgEoG,IAAI,YAExG,sBAAKtG,MAAM,UAAX,UACI,qBAAKA,MAAM,gBAAgBC,IAAKC,8DAAsDoG,IAAI,SAC1F,oBAAItG,MAAM,iBAAV,0BACA,oBAAIA,MAAM,eAAV,8JAEA,qBAAKA,MAAM,gBAAgBC,IAAKC,gFAAwEoG,IAAI,kBAKxH,sBAAKtG,MAAM,eAAX,UACI,oBAAIA,MAAM,gBAAV,sDACA,oBAAIA,MAAM,mBAAV,6EACA,sBAAKA,MAAM,iBAAX,UACI,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,cAAV,6CACA,sBAAKA,MAAM,sBAAX,UACI,oBAAIA,MAAM,kBAAV,+BACA,qBAAKA,MAAM,cAAX,SACI,qBAAKP,GAAG,kBAEZ,oBAAIO,MAAM,kBAAV,sCAGR,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,cAAV,4CACA,sBAAKA,MAAM,sBAAX,UACI,oBAAIA,MAAM,kBAAV,8BACA,qBAAKA,MAAM,cAAX,SACI,qBAAKP,GAAG,mBAEZ,oBAAIO,MAAM,kBAAV,gCAGR,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,cAAV,4CACA,sBAAKA,MAAM,sBAAX,UACI,oBAAIA,MAAM,kBAAV,2BACA,qBAAKA,MAAM,cAAX,SACI,qBAAKP,GAAG,iBAEZ,oBAAIO,MAAM,kBAAV,0CAMhB,sBAAKA,MAAM,gBAAgBP,GAAG,yBAA9B,UACI,oBAAIO,MAAM,cAAV,mCACA,oBAAIA,MAAM,iBAAV,uHAGA,cAAC,EAAD,CACIf,KAAM4G,EACN3G,aAAc,kBAAM4G,GAAwBD,MAEhD,sBAAK7F,MAAM,0BAAX,UACI,cAAC,EAAD,CACIJ,cAAeiG,EACfhG,gBACI,WACImG,GAAgB,GAChBG,EAAQ,cACLN,GACCO,EAAa,QACbC,EAAS,YAETD,EAAa,SACbC,EAAS,aAKzB,cAAC,EAAD,CACIzG,cAAeiG,EACfhG,gBACI,WACImG,GAAgB,GAChBG,EAAQ,OACLN,GACCO,EAAa,QACbC,EAAS,YAETD,EAAa,SACbC,EAAS,aAKzB,sBAAKrG,MAAM,yBAAX,UACI,6CACA,2HACA,qBAAKA,MAAM,gBAAX,SACI,oBAAIA,MAAM,QAAV,+BAEJ,sBAAKA,MAAM,mBAAX,UACI,sBAAKA,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,sDAEJ,sBAAKF,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,yDAEJ,sBAAKF,MAAM,mBAAX,UACI,qBAAKC,IAAKC,6DACV,sDAEJ,sBAAKF,MAAM,oBAAX,UACI,qBAAKC,IAAKC,6DACV,gEAGR,mBAAGuF,KAAK,oCAAoCF,OAAO,SAASvF,MAAM,kBAAlE,+BAIZ,sBAAKA,MAAM,SAAX,UACI,sBAAKA,MAAM,cAAX,UACI,uDACA,mFACA,mIACA,sDACA,kDAEJ,sBAAKA,MAAM,YAAX,UACI,qBAAKC,IAAKC,mEACV,sBAAKF,MAAM,cAAX,UACI,mBAAGA,MAAM,OAAT,uBACA,kfAQZ,cAAC,WAAD,CAAUqB,OAAQqE,EAAlB,SACI,cAAC,EAAD,CACI1E,OAAQ+E,EACR9E,cAAe,WACX+E,GAAgB,IAEpB9E,KAAMA,EACNC,UAAWA,EACXpB,MAAOA,EACPqB,kBAAmB,WACf4E,GAAgB,GAChBE,GAAc,QAI1B,cAAC,EAAD,CACIlF,OAAQiF,EACRhF,cAAe,WACXiF,GAAc,UCzN1BK,IAASC,OAAO,cAAC,EAAD,IAASxB,SAASyB,eAAe,W","file":"static/js/main.78f4302b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const BillCycleSelector = ({isOn, handleToggle}) => {\n    let yearlyClass = \"\";\n    let discountText = \"Save 0%\";\n    let discountClass = \"discount_tag_red\";\n    if(isOn === true){\n        yearlyClass = \"white\";\n        discountText = \"Save 20%\";\n        discountClass = \"discount_tag\";\n    }\n\n    return(<>\n        <div className=\"bill_cycle_selector\">\n            <label className=\"switch_container\">\n                <span className=\"monthly\">Billed Monthly</span>\n                <input checked={isOn} onChange={handleToggle} id=\"cycle_switch\" type=\"checkbox\"></input>\n                <span className=\"slider\"></span>\n                <span className={\"yearly\", yearlyClass}>Billed Annually</span>\n            </label>\n            <span id=\"discount_tag_wrapper\">\n                <h2 className={discountClass}>{discountText}</h2>\n            </span>\n        </div>\n    </>);\n};","import React from 'react';\n\nexport const IdeasOnlyPanel = ({annualBilling, onClickFunction}) => {\n    let billString = \"Monthly\";\n    let price = \"$1.99\";\n    if(annualBilling){\n        billString = \"Annual\";\n        price = \"$1.59\";\n    }\n\n    return(<>\n        <div class=\"pricing_plan\" id=\"ideas_only\">\n            <h1>Ideas Only</h1>\n            <p>Perfect for thoes who already know their way around the kitchen and just need ideas!</p>\n            <div class=\"price_wrapper\">\n                <h1 class=\"price\">{price} <span class=\"light_mons\">/month</span></h1>\n                <h2>(Billed {billString})</h2>\n            </div>\n            <div class=\"features_in_plan\">\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Weekly meal plans</h2>\n                </div>\n                <div class=\" row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>30 Day Free Trial</h2>\n                </div>\n            </div>\n            <button onClick={onClickFunction} class=\"try_free_button\">Try Free (30 Days)</button>\n        </div>\n    </>);\n};","import React from 'react';\n\nexport const ProPanel = ({annualBilling, onClickFunction}) => {\n    let billString = \"Monthly\";\n    let price = \"$4.99\";\n    if(annualBilling){\n        billString = \"Annual\";\n        price = \"$3.99\";\n    }\n\n    return(<>\n        <div class=\"pricing_plan\" id=\"pro_plan\">\n            <div class=\"most_popular\">Most Popular</div>\n            <h1>Pro</h1>\n            <p>Perfect for those who dont want to think about what to cook, buy and how to make it!</p>\n            <div class=\"price_wrapper\">\n                <h1 class=\"price\">{price} <span class=\"light_mons\">/month</span></h1>\n                <h2>(Billed {billString})</h2>\n            </div>\n            <div class=\"features_in_plan\">\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Weekly meal plans</h2>\n                </div>\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Weekly grocery lists</h2>\n                </div>\n                <div class=\"row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>Recipies Included</h2>\n                </div>\n                <div class=\" row_flex feature\">\n                    <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                    <h2>30 Day Free Trial</h2>\n                </div>\n            </div>\n            <button onClick={onClickFunction} class=\"try_free_button\">Try Free (30 Days)</button>\n        </div>\n    </>);\n};","import React from 'react';\nimport {CardElement} from '@stripe/react-stripe-js';\n\nexport const CardSection = () => {\n    const CARD_ELEMENT_OPTIONS = {\n        style: {\n            base: {\n            color: \"#32325d\",\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n                color: \"#aab7c4\",\n            },\n            },\n            invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\",\n            },\n        },\n    };\n    return (\n        <label>\n        Card details\n        <CardElement options={CARD_ELEMENT_OPTIONS} />\n        </label>\n    );\n};","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n\nimport { CardSection } from '../CardSection';\n\n\nexport const CheckoutPopup = ({isOpen, closeFunction, plan, billCycle, price, toSuccessFunction}) => {\n    const stripe = useStripe();\n    const elements = useElements();\n\n    let [processing, setProcessing] = useState(false);\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const spinTransition = {\n        loop: Infinity,\n        ease: \"linear\",\n        duration: 1,\n    }\n\n    const circleStyle = {\n        display: \"block\",\n        width: \"18px\",\n        height: \"18px\",\n        border: \"3px solid #e9e9e9\",\n        borderTop: \"3px solid #3498db\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n    };\n    \n    let checkoutText = \"Confirm Payment\";\n    if(processing){\n        checkoutText = (<motion.span\n                            style={circleStyle}\n                            animate={{ rotate: 360 }}\n                            transition={spinTransition}\n                        />);\n    }\n\n// This function was used for one off payments. It's in here just in case\n    // const handleSubmit = async (event) => {\n    //     if (!stripe || !elements) {\n    //         // Stripe.js has not yet loaded.\n    //         // Make sure to disable form submission until Stripe.js has loaded.\n    //         return \"Please try again. Stripe has not loaded. :)\";\n    //     }\n\n    //     if(firstName == \"\"){\n    //         return \"First Name Empty\"\n    //     }\n    //     if(lastName == \"\"){\n    //         return \"Last Name Empty\"\n    //     }\n    //     if(email == \"\"){\n    //         return \"Email Empty\"\n    //     }\n\n        \n    //     const res = await axios.post('http://localhost:3000/pay', {email: email, first_name: firstName, last_name: lastName});\n    //     const clientSecret = await res.data['client_secret'];\n    //     console.log(await clientSecret);\n    //     const result = await stripe.confirmCardPayment(clientSecret, {\n    //     payment_method: {\n    //         card: elements.getElement(CardElement),\n    //         billing_details: {\n    //             name: firstName+\" \"+lastName,\n    //             email: email,\n    //         },\n    //     }\n    //     });\n    //     if (result.error) {\n    //         // Show error to your customer (e.g., insufficient funds)\n    //         console.log(result.error.message);\n    //         return result.error.message;\n    //     } else {\n    //         // The payment has been processed!\n    //         if (result.paymentIntent.status === 'succeeded') {\n    //             // Show a success message to your customer\n    //             // There's a risk of the customer closing the window before callback\n    //             // execution. Set up a webhook or plugin to listen for the\n    //             // payment_intent.succeeded event that handles any business critical\n    //             // post-payment actions.\n    //             console.log(\"Payment Processed\");\n    //             return \"success\";\n    //         }\n    //     }\n    // };\n\n// This function is used for handling subsriptions\n// !!!!!!!!!When you're not doing the free trial this whole function and the backend function need to change!!!!!!!!!\n// Look at this for an example https://github.com/Vuka951/tutorial-code/blob/master/react-express-stripe/subscription/react-app/src/components/HomePage.js\n    const handleSubmitSub = async (event) => {\n        if (!stripe || !elements) {\n            // Stripe.js has not yet loaded.\n            // Make sure to disable form submission until Stripe.js has loaded.\n            return \"Please try again. Stripe has not loaded. :)\";\n        }\n\n        if(firstName == \"\"){\n            return \"First Name Empty\";\n        }\n        if(lastName == \"\"){\n            return \"Last Name Empty\";\n        }\n        if(email == \"\"){\n            return \"Email Empty\";\n        }\n\n        const result = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardElement),\n            billing_details: {\n                        name: firstName+\" \"+lastName,\n                        // email: email,\n                        email: 'thisistheproblem@gmail.com',\n            },\n        });\n\n        if (result.error) {\n            console.log(result.error.message);\n            return result.error.message;\n        }else{\n            const res = await axios.post('http://localhost:3000/sub', {'payment_method': result.paymentMethod.id, 'email': email, 'firstName': firstName, 'lastName': lastName, 'plan': plan, 'billCycle': billCycle});\n            // eslint-disable-next-line camelcase\n            console.log(res);\n\n            if(res.data.code){\n                console.log('Payment Failed');\n                console.log(res.data.raw.message);\n                return res.data.raw.message;\n            }\n\n            const {client_secret, status} = res.data;\n            console.log(status);\n\n            if (status === 'requires_action') {\n                const cardSetup = await stripe.confirmCardSetup(client_secret).then(function(result) {\n                    console.log(result);\n                    if (result.error) {\n                        // Display error message in your UI.\n                        // The card was declined (i.e. insufficient funds, card has expired, etc)\n                        console.log('There was an issue');\n                        console.log(result.error);\n                        // console.log('Error Message Returned');\n                        return result.error.message;\n                    } else {\n                        // Show a success message to your customer\n                        console.log('Payment sucessful after confirmation');\n                        return \"success\";\n                    }\n                });\n                return cardSetup;\n            } else if(status === \"succeeded\") {\n                // No additional information was needed\n                // Show a success message to your customer\n                console.log('Payment sucessful');\n                return \"success\";\n            } else {\n                //Unexpected status\n                return \"Error processing payment. Please try again or use a different card!\";\n            }\n        }\n  };\n\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div disabled={processing} onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup\">\n                <button disabled={processing} onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Checkout</h1>\n                    <h2>Your subscription will start now.</h2>\n                </div>\n                <div className=\"checkout_features\">\n                    <p>➔ Total due now $0</p>\n                    <p>➔ Subscribing to <span class=\"bold\">{plan}</span></p>\n                    <p>➔ After 30 days you will be billed {price}/{billCycle}</p>\n                </div>\n                <form onSubmit={async () => {\n                    setProcessing(true);\n                    const result = await handleSubmitSub();\n                    setProcessing(false);\n                    if(result === \"success\"){\n                        // console.log(\"if ran\");\n                        toSuccessFunction();\n                        setFirstName('');\n                        setLastName('');\n                        setEmail('');\n                        setErrorMessage('');\n                    }else{\n                        // console.log(result);\n                        // console.log('else ran. result value- '+result);\n                        // alert(result);\n                        setErrorMessage(result);\n                    }\n                }}>\n                    <label>\n                        First Name\n                        <input \n                            type=\"text\"\n                            value={firstName}\n                            disabled={processing}\n                            onChange={(e)=> {setFirstName(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Last Name\n                        <input \n                            type=\"text\"\n                            value={lastName}\n                            disabled={processing}\n                            onChange={(e)=> {setLastName(e.target.value)}}\n                        />\n                    </label>\n                    <label>\n                        Email\n                        <input \n                            type=\"text\"\n                            value={email}\n                            disabled={processing}\n                            onChange={(e)=> {setEmail(e.target.value)}}\n                        />\n                    </label>\n                    <CardSection />\n                    <button id=\"checkout_button\" disabled={!stripe || processing}>\n                        {checkoutText}\n                    </button>\n                    <p className=\"error_message\">{errorMessage}</p>\n                </form>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useState } from 'react';\n\nexport const SuccessPopup = ({isOpen, closeFunction}) => {\n    if(isOpen){\n        document.body.style.overflow = 'hidden';\n        return(<>\n            <div onClick={closeFunction} class=\"checkout_overlay\"></div>\n            <div class=\"checkout_popup success_popup\">\n                <button onClick={closeFunction} id=\"checkout_x\">✕</button>\n                <div className=\"checkout_title\">\n                    <h1>Success</h1>\n                    <h2>Your payment was sucessfully processed.</h2>\n                </div>\n                <div id=\"success_body\">\n                    You will recieve a welcome email from us soon to confirm that you are good to go! If you do\n                         not recieve an email from us in the next 10 minutes or if you have any questions please\n                         send us an email!\n                </div>\n                <a href=\"mailto:kushagrachopra16@gmail.com\" target=\"_blank\" class=\"try_free_button\">Email Us</a>\n            </div>\n        </>);\n    }\n    document.body.style.overflow = 'unset';\n    return(<></>);\n};","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BillCycleSelector } from '../BillCycleSelector';\nimport { IdeasOnlyPanel } from '../IdeasOnlyPanel';\nimport { ProPanel } from '../ProPanel';\nimport { CheckoutPopup } from '../CheckoutPopup';\nimport { SuccessPopup } from '../Success Popup';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe(\"pk_test_51IgxffKIKjam29K6f9DeS6dId7Jbc5KoL2jJ8V9AA9Yj2Bdlzd6QqhBqwtWSOpkcrHO0Aj1HXuAEFS9i1vJD6u2H00iyxq9i6X\");\n\nexport const App = () => {\n    const [annualCycleSelected, setAnnualCycleSelected] = useState(true);\n    const [checkoutOpen, setCheckoutOpen] = useState(false);\n    const [successOpen, setSucessOpen] = useState(false);\n\n    const [plan, setPlan] = useState('');\n    const [billCycle, setBillCycle] = useState('');\n    const [price, setPrice] = useState('');\n\n    return (<>\n    <header class=\"site-header\">\n        <div class=\"site-identity\">\n            <a href=\"#\">\n                <img src={process.env.PUBLIC_URL + \"/images/My Dinner Pal Logo Black.png\"} alt=\"Site Name\"></img>\n            </a>\n            <h1>\n                <href href=\"#\" id=\"nav_header\">My Dinner Pal</href>\n            </h1>\n        </div>\n        <a class=\"header_buttion\" href=\"#pricing_panel_selector\">Try 30 Days Free!</a>\n    </header>\n    \n    <div class=\"hero\">\n        <img id=\"main_hero\" src={process.env.PUBLIC_URL + \"/images/My Dinner Pal Home Image (healthy chicken).png\"} alt=\"hero\">\n            </img>\n        <div id=\"hero_body\">\n            <div class=\"big_title\">Is deciding what to cook annoying?</div>\n            <p class=\"big_subtitle\">We make weekday cooking stress free by sending you an easy meal plan and grocery\n                list every week! </p>\n            <a class=\"hero_button\" href=\"#pricing_panel_selector\">\n                <h2>Try 30 days FREE</h2>\n                <i class=\"arrow right\"></i>\n            </a>\n        </div>\n    </div>\n\n    <div class=\"features_panel\">\n        <h1 class=\"features_header\">Never worry about what to cook again!</h1>\n        <h2>Save time in the kitchen and reduce food waste</h2>\n        <div class=\"benefits_panel\">\n            <div class=\"benefit\">\n                <img class=\"benefits_icon\" src={process.env.PUBLIC_URL + \"/images/Time Icon.png\"} alt=\"hero\"></img>\n                <h1 class=\"benefit_header\">Save Time</h1>\n                <h2 class=\"benefit_text\"> Don’t waste time worrying about what to eat! We send you meal plans every week\n                    to make cooking straightfoward!</h2>\n                <img class=\"benefit_image\" src={process.env.PUBLIC_URL + \"/images/(meal plan)My Dinner Pal.png\"} alt=\"hero\"></img>\n            </div>\n            <div class=\"benefit\">\n                <img class=\"benefits_icon\" src={process.env.PUBLIC_URL + \"/images/No Stress Icon.png\"} alt=\"hero\"></img>\n                <h1 class=\"benefit_header\">Be Stress Free</h1>\n                <h2 class=\"benefit_text\"> Don’t stress about how to cook delicious food! We only include recipies we’ve\n                    tested for quality and ease!</h2>\n                <img class=\"benefit_image\" src={process.env.PUBLIC_URL + \"/images/(recipies)My Dinner Pal.png\"} alt=\"hero\"></img>\n            </div>\n            <div class=\"benefit\">\n                <img class=\"benefits_icon\" src={process.env.PUBLIC_URL + \"/images/No Waste Icon.png\"} alt=\"hero\"></img>\n                <h1 class=\"benefit_header\">Reduce Waste</h1>\n                <h2 class=\"benefit_text\"> Don’t buy things you don’t need at the grocery store! We send you a grocery\n                    list every week so you know exactly what you need to buy!</h2>\n                <img class=\"benefit_image\" src={process.env.PUBLIC_URL + \"/images/(grocery list)My Dinner Pal (3).png\"} alt=\"hero\"></img>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"levels_panel\">\n        <h1 class=\"levels_header\">Made for busy people who like good food!</h1>\n        <h2 class=\"levels_subheader\">Perfect for off campus college students and young professionals</h2>\n        <div class=\"levels_wrapper\">\n            <div class=\"level_box\">\n                <h1 class=\"level_title\">How delicious will the food be?</h1>\n                <div class=\"level_inner_wrapper\">\n                    <h2 class=\"level_end_label\">Way too \"healthy\"</h2>\n                    <div class=\"level_range\">\n                        <div id=\"taste_level\"></div>\n                    </div>\n                    <h2 class=\"level_end_label\">The best food ever</h2>\n                </div>\n            </div>\n            <div class=\"level_box\">\n                <h1 class=\"level_title\">How healthy will this make me?</h1>\n                <div class=\"level_inner_wrapper\">\n                    <h2 class=\"level_end_label\">I never want abs</h2>\n                    <div class=\"level_range\">\n                        <div id=\"health_level\"></div>\n                    </div>\n                    <h2 class=\"level_end_label\">Fitness Guru</h2>\n                </div>\n            </div>\n            <div class=\"level_box\">\n                <h1 class=\"level_title\">How easy will the recipies be?</h1>\n                <div class=\"level_inner_wrapper\">\n                    <h2 class=\"level_end_label\">Gordon Ramsay</h2>\n                    <div class=\"level_range\">\n                        <div id=\"ease_level\"></div>\n                    </div>\n                    <h2 class=\"level_end_label\">What is cooking?</h2>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"pricing_panel\" id=\"pricing_panel_selector\">\n        <h1 class=\"short_title\">Try free for 30 Days!</h1>\n        <h2 class=\"short_subtitle\">No risk! If we aren’t able to make your life easier in the next month just\n            cancel! No hard feelings!\n        </h2>\n        <BillCycleSelector \n            isOn={annualCycleSelected}\n            handleToggle={() => setAnnualCycleSelected(!annualCycleSelected)}\n        />\n        <div class=\"pricing_plans_container\">\n            <IdeasOnlyPanel\n                annualBilling={annualCycleSelected}\n                onClickFunction={\n                    () => {\n                        setCheckoutOpen(true)\n                        setPlan(\"Ideas Only\");\n                        if(annualCycleSelected){\n                            setBillCycle(\"year\");\n                            setPrice(\"$19.08\");\n                        }else{\n                            setBillCycle(\"month\");\n                            setPrice(\"$1.99\");\n                        }\n                    }\n                }\n            />\n            <ProPanel\n                annualBilling={annualCycleSelected}\n                onClickFunction={\n                    () => {\n                        setCheckoutOpen(true)\n                        setPlan(\"Pro\");\n                        if(annualCycleSelected){\n                            setBillCycle(\"year\");\n                            setPrice(\"$47.88\");\n                        }else{\n                            setBillCycle(\"month\");\n                            setPrice(\"$4.99\");\n                        }\n                    }\n                }\n            />\n            <div class=\"pricing_plan beta_plan\">\n                <h1>Beta Tester</h1>\n                <p>Want to help us make cooking easy? Send us an email to become an early access beta tester!</p>\n                <div class=\"price_wrapper\">\n                    <h1 class=\"price\">Special Pricing</h1>\n                </div>\n                <div class=\"features_in_plan\">\n                    <div class=\"row_flex feature\">\n                        <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                        <h2>Weekly meal plans</h2>\n                    </div>\n                    <div class=\"row_flex feature\">\n                        <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                        <h2>Weekly grocery lists</h2>\n                    </div>\n                    <div class=\"row_flex feature\">\n                        <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                        <h2>Recipies Included</h2>\n                    </div>\n                    <div class=\" row_flex feature\">\n                        <img src={process.env.PUBLIC_URL + \"/images/Check Icon.png\"}></img>\n                        <h2>Early access to features</h2>\n                    </div>\n                </div>\n                <a href=\"mailto:kushagrachopra16@gmail.com\" target=\"_blank\" class=\"try_free_button\">Email Us</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <div class=\"footer_info\">\n            <p>© My Dinner Pal LLC</p>\n            <p>Please contact us with any questions or conscerns!</p>\n            <p>To upgrade or cancel your subscription just send us an email and we will take care of it promptly!</p>\n            <p>mydinnerpal@gmail.com</p>\n            <p>(336) 406-8998</p>\n        </div>\n        <div class=\"our_story\">\n            <img src={process.env.PUBLIC_URL + \"/images/Profile Picture.jpeg\"}></img>\n            <div class=\"story_inner\">\n                <p class=\"bold\">Our Story</p>\n                <p>My Dinner Pal was founded a busy college student who was sick of fighting the uphill battle of\n                    finding semi-healthy delicious meals to cook. Kushagra Chopra personally struggled with his health\n                    and finding the help and resources to improve his life was difficult. Through finding and pursuing\n                    healthy eating, he ultimately ended up losing 40 pounds. Ever since then, he’s focused on making\n                    delicious semi-healthy eating easy and convenient for others.</p>\n            </div>\n        </div>\n    </div>\n    <Elements stripe={stripePromise}>\n        <CheckoutPopup\n            isOpen={checkoutOpen}\n            closeFunction={() => {\n                setCheckoutOpen(false);\n            }}\n            plan={plan}\n            billCycle={billCycle}\n            price={price}\n            toSuccessFunction={() => {\n                setCheckoutOpen(false);\n                setSucessOpen(true);\n            }}\n        />\n    </Elements>\n    <SuccessPopup\n        isOpen={successOpen}\n        closeFunction={() => {\n            setSucessOpen(false);\n        }}\n    />\n    </>)\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}